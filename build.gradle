import java.time.Year

plugins {
    id "fabric-loom" version "0.8-SNAPSHOT"
    id "org.cadixdev.licenser" version "0.5.0"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.jfrog.artifactory" version '4.21.0'
    id 'org.ajoberstar.grgit' version '3.1.1'
    id 'com.github.breadmoirai.github-release' version '2.2.9'
    id "maven-publish"
}

archivesBaseName = rootProject.archives_base_name
group = rootProject.maven_group

subprojects {
    apply plugin: 'fabric-loom'
    archivesBaseName = rootProject.archives_base_name + "-" + project.name
    group = rootProject.maven_group + "." + rootProject.archives_base_name

    dependencies {
        implementation rootProject.sourceSets.main.output
    }
}

allprojects {

    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16

    version = rootProject.mod_version

    repositories {
    }

    dependencies {
        // To change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        modApi fabricApi.module("fabric-api-base", project.fabric_version)
        modApi fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
//        modRuntime "io.github.prospector:modmenu:${project.modmenu_version}"

        compileOnly "org.jetbrains:annotations:${jb_annotations_version}"
        compileOnly "com.google.code.findbugs:jsr305:${findbugs_version}"
        compileOnly "org.apiguardian:apiguardian-api:${apiguardian_version}"

        testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.0-M1"
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.options.release = 16
    }
}

minecraft {
    accessWidener = file("src/main/resources/satin.accesswidener")
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

license {
    header = rootProject.file("code_quality/${project.license_header}_HEADER.txt")

    // Apply licenses only to main source set
    sourceSets = [project.sourceSets.main]
    include "**/*.java"

    newLine = false // Disables the empty line between the header and package name
    //ignoreFailures = true //Ignore failures and only print a warning on license violations

    //export variables
    ext {
        year = Year.now()
        projectDisplayName = project.name
        projectOwners = rootProject.owners
        if (project.license_header.contains('GPL')) {
            if (!project.hasProperty("gpl_version")) {
                throw new RuntimeException("GPL version needs to be specified through the 'gpl_version' property")
            }
            gplVersion = project.gpl_version
        }
    }
}

apply from: 'release.gradle'
